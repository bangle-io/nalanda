// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic test additional slices work in main 1`] = `
[
  {
    "body": {
      "mainStoreName": "test-main",
      "storeName": "test-replica-store-1",
      "syncSliceIds": [
        "mySlice",
        "mySlice.testSlice1",
      ],
    },
    "from": "test-replica-store-1",
    "to": "test-main",
    "type": "replica-info",
  },
  {
    "body": {
      "replicaStoreNames": [
        "test-replica-store-1",
      ],
      "storeName": "test-main",
      "syncSliceIds": [
        "mySlice",
        "mySlice.testSlice1",
      ],
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "main-info",
  },
  {
    "from": "test-replica-store-1",
    "to": "test-main",
    "type": "replica-ready",
  },
  {
    "body": {
      "tx": {
        "actionId": "increment",
        "metadata": {
          "TX_META_STORE_NAME": "test-main",
        },
        "payload": [],
        "sourceSliceId": "mySlice.testSlice1",
        "sourceSliceName": "testSlice1",
        "targetSliceId": "mySlice.testSlice1",
        "uid": "<<UID>>",
      },
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "tx",
  },
]
`;

exports[`basic test having a sync slice in main but no replica 1`] = `
[
  {
    "body": {
      "mainStoreName": "test-main",
      "storeName": "test-replica-store-1",
      "syncSliceIds": [],
    },
    "from": "test-replica-store-1",
    "to": "test-main",
    "type": "replica-info",
  },
  {
    "body": {
      "replicaStoreNames": [
        "test-replica-store-1",
      ],
      "storeName": "test-main",
      "syncSliceIds": [
        "testSlice1",
      ],
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "main-info",
  },
  {
    "from": "test-replica-store-1",
    "to": "test-main",
    "type": "replica-ready",
  },
]
`;

exports[`basic test one slice sync - case 1 1`] = `
[
  {
    "actionId": "increment",
    "payload": [],
    "sourceSliceLineage": "l_testSlice1$",
    "store": "test-main",
    "targetSliceLineage": "l_testSlice1$",
    "txId": "<txId>",
    "type": "TX",
  },
  {
    "actionId": "ready",
    "dispatcher": "l_watch-in-main$",
    "payload": [],
    "sourceSliceLineage": "l_watch-in-main$",
    "store": "test-main",
    "targetSliceLineage": "l_watch-in-main$",
    "txId": "<txId>",
    "type": "TX",
  },
  {
    "name": "watch-in-main(changeEffect)",
    "source": [
      {
        "actionId": "increment",
        "lineageId": "l_testSlice1$",
      },
      {
        "actionId": "ready",
        "lineageId": "l_watch-in-main$",
      },
    ],
    "type": "UPDATE_EFFECT",
  },
  {
    "actionId": "increment",
    "dispatcher": "l_watch-in-main$",
    "payload": [],
    "sourceSliceLineage": "l_testSlice1$",
    "store": "test-main",
    "targetSliceLineage": "l_testSlice1$",
    "txId": "<txId>",
    "type": "TX",
  },
  {
    "name": "watch-in-main(changeEffect)",
    "source": [
      {
        "actionId": "increment",
        "lineageId": "l_testSlice1$",
      },
    ],
    "type": "UPDATE_EFFECT",
  },
]
`;

exports[`basic test one slice sync - case 1 3`] = `
[
  {
    "body": {
      "mainStoreName": "test-main",
      "storeName": "test-replica-store-1",
      "syncSliceIds": [
        "testSlice1",
      ],
    },
    "from": "test-replica-store-1",
    "to": "test-main",
    "type": "replica-info",
  },
  {
    "body": {
      "replicaStoreNames": [
        "test-replica-store-1",
      ],
      "storeName": "test-main",
      "syncSliceIds": [
        "testSlice1",
      ],
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "main-info",
  },
  {
    "from": "test-replica-store-1",
    "to": "test-main",
    "type": "replica-ready",
  },
  {
    "body": {
      "tx": {
        "actionId": "increment",
        "metadata": {
          "TX_META_STORE_NAME": "test-main",
        },
        "payload": [],
        "sourceSliceId": "testSlice1",
        "sourceSliceName": "testSlice1",
        "targetSliceId": "testSlice1",
        "uid": "<<UID>>",
      },
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "tx",
  },
  {
    "body": {
      "tx": {
        "actionId": "increment",
        "metadata": {
          "TX_META_DISPATCHER": "l_watch-in-main$",
          "TX_META_STORE_NAME": "test-main",
        },
        "payload": [],
        "sourceSliceId": "testSlice1",
        "sourceSliceName": "testSlice1",
        "targetSliceId": "testSlice1",
        "uid": "<<UID>>",
      },
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "tx",
  },
]
`;

exports[`basic test one slice sync - case 2 - replica slice depends on sync slice 1`] = `
[
  {
    "actionId": "ready",
    "dispatcher": "l_watch-in-replica-store$",
    "payload": [],
    "sourceSliceLineage": "l_watch-in-replica-store$",
    "store": "test-replica-store-1",
    "targetSliceLineage": "l_watch-in-replica-store$",
    "txId": "<txId>",
    "type": "TX",
  },
  {
    "actionId": "increment",
    "payload": [],
    "sourceSliceLineage": "l_testSlice1$",
    "store": "test-main",
    "targetSliceLineage": "l_testSlice1$",
    "txId": "<txId>",
    "type": "TX",
  },
  {
    "name": "watch-in-replica-store(changeEffect)",
    "source": [
      {
        "actionId": "ready",
        "lineageId": "l_watch-in-replica-store$",
      },
      {
        "actionId": "increment",
        "lineageId": "l_testSlice1$",
      },
    ],
    "type": "UPDATE_EFFECT",
  },
  {
    "actionId": "increment",
    "dispatcher": "l_watch-in-replica-store$",
    "payload": [],
    "sourceSliceLineage": "l_testSlice1$",
    "store": "test-replica-store-1",
    "targetSliceLineage": "l_testSlice1$",
    "txId": "<txId>",
    "type": "TX",
  },
  {
    "name": "watch-in-replica-store(changeEffect)",
    "source": [
      {
        "actionId": "increment",
        "lineageId": "l_testSlice1$",
      },
    ],
    "type": "UPDATE_EFFECT",
  },
]
`;

exports[`sync queuing with a send delay in main & replica 1`] = `
[
  {
    "body": {
      "mainStoreName": "test-main",
      "storeName": "test-replica-store-1",
      "syncSliceIds": [
        "testSlice1",
      ],
    },
    "from": "test-replica-store-1",
    "to": "test-main",
    "type": "replica-info",
  },
  {
    "body": {
      "replicaStoreNames": [
        "test-replica-store-1",
      ],
      "storeName": "test-main",
      "syncSliceIds": [
        "testSlice1",
      ],
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "main-info",
  },
  {
    "from": "test-replica-store-1",
    "to": "test-main",
    "type": "replica-ready",
  },
  {
    "body": {
      "tx": {
        "actionId": "increment",
        "metadata": {
          "TX_META_DESERIALIZED_FROM": "<txMetaDeserializedFrom>",
          "TX_META_STORE_NAME": "test-main",
        },
        "payload": [],
        "sourceSliceId": "testSlice1",
        "sourceSliceName": "testSlice1",
        "targetSliceId": "testSlice1",
        "uid": "<<UID>>",
      },
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "tx",
  },
  {
    "body": {
      "tx": {
        "actionId": "increment",
        "metadata": {
          "TX_META_DESERIALIZED_FROM": "<txMetaDeserializedFrom>",
          "TX_META_DISPATCHER": "l_watch-in-main-store$",
          "TX_META_STORE_NAME": "test-main",
        },
        "payload": [],
        "sourceSliceId": "testSlice1",
        "sourceSliceName": "testSlice1",
        "targetSliceId": "testSlice1",
        "uid": "<<UID>>",
      },
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "tx",
  },
  {
    "body": {
      "tx": {
        "actionId": "increment",
        "metadata": {
          "TX_META_DESERIALIZED_FROM": "<txMetaDeserializedFrom>",
          "TX_META_DISPATCHER": "l_watch-in-replica-store$2",
          "TX_META_STORE_NAME": "test-replica-store-1",
        },
        "payload": [],
        "sourceSliceId": "testSlice1",
        "sourceSliceName": "testSlice1",
        "targetSliceId": "testSlice1",
        "uid": "<<UID>>",
      },
    },
    "from": "test-replica-store-1",
    "to": "test-main",
    "type": "tx",
  },
  {
    "body": {
      "tx": {
        "actionId": "increment",
        "metadata": {
          "TX_META_DESERIALIZED_FROM": "<txMetaDeserializedFrom>",
          "TX_META_DISPATCHER": "l_watch-in-replica-store$2",
          "TX_META_STORE_NAME": "test-replica-store-1",
        },
        "payload": [],
        "sourceSliceId": "testSlice1",
        "sourceSliceName": "testSlice1",
        "targetSliceId": "testSlice1",
        "uid": "<<UID>>",
      },
    },
    "from": "test-main",
    "to": "test-replica-store-1",
    "type": "tx",
  },
]
`;
